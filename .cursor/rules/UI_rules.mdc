---
description: 这个项目的整个UI说明规范
globs: 
alwaysApply: false
---
一、UI 简要说明
    1/1、 整体说明：这个项目是一个人与AI 交互，然后AI 做计划，且有序控制示波器的一个软件。
    1/2、 风格：现代化: **Material Design 3 + Fluent Design** 融合风格
    1/3、 原则：**分离度高**，**模块化**，支持国际化。且整个软件用的是actor模式，所以UI 的也有自己的actor 需要接受其他线程的信息，模块化的时候log 窗口是一个文件， 流程图侧边栏也是一个文件， 工作区域也是一个文件，对话窗口也是一个文件
二、UI 的主要功能
    2/1、 **AI 对话窗口**：这个需要有一个AI 对话窗口，这个对话窗口与我们常用的聊天软件一样。需要支持md格式的显示。AI 的回复是从AI ACTOR 传递过来的。支持流式响应。且聊天框的光标不是每次更新都会移动到最新为止，而是只有用户输入的时候才会移动到最新为止。
    2/2、 **log 窗口**：显示系统的info log信息
    2/3、 **工作区域**：这个是一个带有标签页的工作区域。他可以显示图片，也可以显示任务工作流卡片等详细信息。流程卡片的主要信息参考一下json
        **任务卡片**的json
{
    "计划计数": 0,
    "任务名": "直接使用输入的任务名"，
    "步骤总数": 0,
    "Json B样式": {
        "每个步骤具体内容": [
            {
                "交互类型": "instruction/HCI",
                "具体描述": "具体的示波器操作指令或人机交互说明",
                "执行情况": "如果没有执行则为'待执行'，如果执行了为具体的执行结果"
            }
        ],
        "当前步骤": 0,
        "任务状态": "running/completed/error",
        "最终结果": "任务执行的最终结果"
    }
}
        **计划划卡片**的json：
        {
    "任务总数": 0,
    "计划名": "如：项目test1 测试计划，临时项目测试计划等",
    "Json A样式": {
        "任务具体内容": [
            {
                "任务名": "如：GsensorI2C测试或者通道1 clk测试之类的",
                "任务类型": "signal_test/protocol_test",
                "任务描述": "具体的测试任务描述，将传递给Level2Chain",
                "执行情况": "任务的执行状态和结果",
                "预估时间": "预计执行时间（分钟）"
            }
        ],
        "当前任务": 0,
        "计划时间": "总计划预计时间",
        "计划状态": "planning/running/completed/error",
        "计划结果": "整体计划的执行结果",
        "计划计数": 0
    }
}
    2/4、 **计划流程区**：这个是一个树状结构viewtree，主要有两级一级是计划、一级是任务，任务属于计划里面。流程进行到哪一个时显示不同的效果，如running的时候就忽亮忽暗，error的时候就显示红色，完成的时候就显示绿色，其他的就正常颜色
    2/5、 **主题**：这个主要有三种主题默认是黑色，然后还有白色和蓝色的。
    2/6、 **运行流程**：软件启动后应有个登录界面，用户输入账户密码之后，会有鉴权，成功了就会启动UI 主程序
    2/7、 **记忆功能**：可以记录用户的习惯
三、UI 的技术选型
    3/1、 核心框架: PySide6 (Python 3.9+)
    3/2、 UI 技术: Qt Quick (QML) + JavaScript
    3/2、 样式引擎: QML 属性绑定 + QtQuick Controls 2
    3/4、辅助工具:
        Qt Creator (QML 设计/预览)
        Python type hinting (mypy 静态检查)
        Black/Pylint (代码格式化)
        Figma/Sketch (UI 原型设计)

四、UI 的整体架构
    4/1、 
        graph TD
        A[Python 后端] -->|信号/槽| B[QML 前端]
        B -->|属性绑定| A
        C[业务逻辑] --> A
        D[数据模型] --> A
        E[外部服务] --> A
        B --> F[QML 组件库]
        F --> G[基础控件]
        F --> H[自定义控件]
        F --> I[主题引擎]

    4/2、 整个布局
        登录窗口：住院分左右两边，左边是一张图片，先预留为止后续自己添加，右边是我们的账号和密码输入还有个记住密码和自动登录。
        主界面：主界面的工作区分为4部分，左边的侧边栏，主要是树状图的计划工作流。中间的上部分为主要工作区，下面为log显示区。右边是AI 对话区域。注意每个区域的比例和可支持调节大小。


